//败者树：k路归并排序中，用来记录k个旧值的排序结果，从而某一个值被替换后重新排序时，能减少排序次数。
//       k个结点选出最小者，不使用败者树，需要比较k-1次；使用败者树，大约需要比较log2k次
//算法思想：败者树是一棵完全二叉树，叶子结点表示待排序元素，存储值；非叶子点度一定为2，，存储归并段号，表示子女之间比较的结果。
//       分为建树和调整两大步骤，建树或调整完成后根结点即位最终胜者。
//          1）建树：
//                1. 叶子结点比较，败者作为父结点，胜者作为父结点的父结点（候选结点）
//                2. 叶子结点与非叶结点比较，败者替换到非叶结点，胜者作为父结点
//                3. 非叶结点比较同2
//          2）调整：
//                1. 调整前，已经替换最终胜者所在归并段的元素，调整从该叶子结点开始
//                2. 调整规则同建树规则，沿被替换的结点依次向上调整，至决出新的最终胜者